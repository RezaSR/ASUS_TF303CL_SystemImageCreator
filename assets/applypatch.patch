diff --git a/recovery/applypatch/applypatch.c b/recovery/applypatch/applypatch.c
index 2c86e09..58d1596 100644
--- a/recovery/applypatch/applypatch.c
+++ b/recovery/applypatch/applypatch.c
@@ -20,7 +20,14 @@
 #include <stdlib.h>
 #include <string.h>
 #include <sys/stat.h>
+
+#ifdef __APPLE__
+#include <sys/param.h>
+#include <sys/mount.h>
+#else
 #include <sys/statfs.h>
+#endif
+
 #include <sys/types.h>
 #include <fcntl.h>
 #include <unistd.h>
@@ -31,7 +38,10 @@
 #include "mtdutils/mtdutils.h"
 #include "edify/expr.h"
 
+#if !defined(__APPLE__) && !defined(__CYGWIN__)
 static int LoadPartitionContents(const char* filename, FileContents* file);
+#endif
+
 static ssize_t FileSink(const unsigned char* data, ssize_t len, void* token);
 static int GenerateTarget(FileContents* source_file,
                           const Value* source_patch_value,
@@ -56,7 +66,11 @@ int LoadFileContents(const char* filename, FileContents* file) {
     // load the contents of a partition.
     if (strncmp(filename, "MTD:", 4) == 0 ||
         strncmp(filename, "EMMC:", 5) == 0) {
+#if defined(__APPLE__) || defined(__CYGWIN__)
+        return -1;
+#else
         return LoadPartitionContents(filename, file);
+#endif
     }
 
     if (stat(filename, &file->st) != 0) {
@@ -104,6 +118,7 @@ static int compare_size_indices(const void* a, const void* b) {
     }
 }
 
+#if !defined(__APPLE__) && !defined(__CYGWIN__)
 // Load the contents of an MTD or EMMC partition into the provided
 // FileContents.  filename should be a string of the form
 // "MTD:<partition_name>:<size_1>:<sha1_1>:<size_2>:<sha1_2>:..."  (or
@@ -304,7 +319,7 @@ static int LoadPartitionContents(const char* filename, FileContents* file) {
 
     return 0;
 }
-
+#endif
 
 // Save the contents of the given FileContents object under the given
 // filename.  Return 0 on success.
@@ -345,6 +360,7 @@ int SaveFileContents(const char* filename, const FileContents* file) {
     return 0;
 }
 
+#if !defined(__APPLE__) && !defined(__CYGWIN__)
 // Write a memory buffer to 'target' partition, a string of the form
 // "MTD:<partition>[:...]" or "EMMC:<partition_device>:".  Return 0 on
 // success.
@@ -524,6 +540,7 @@ int WriteToPartition(unsigned char* data, size_t len,
     free(copy);
     return 0;
 }
+#endif
 
 
 // Take a string 'str' of 40 hex digits and parse it into the 20
@@ -1009,11 +1026,15 @@ static int GenerateTarget(FileContents* source_file,
     }
 
     if (output < 0) {
+#if defined(__APPLE__) || defined(__CYGWIN__)
+        return 1;
+#else
         // Copy the temp file to the partition.
         if (WriteToPartition(msi.buffer, msi.pos, target_filename) != 0) {
             printf("write of patched data to %s failed\n", target_filename);
             return 1;
         }
+#endif
         free(msi.buffer);
     } else {
         // Give the .patch file the same owner, group, and mode of the
diff --git a/recovery/applypatch/applypatch.h b/recovery/applypatch/applypatch.h
index edec848..6cfa498 100644
--- a/recovery/applypatch/applypatch.h
+++ b/recovery/applypatch/applypatch.h
@@ -38,7 +38,7 @@ typedef struct _FileContents {
 // it to free up space.  If the expected source file doesn't exist, or
 // is corrupted, we look to see if this file contains the bits we want
 // and use it as the source instead.
-#define CACHE_TEMP_SOURCE "/cache/saved.file"
+#define CACHE_TEMP_SOURCE "saved.file"
 
 typedef ssize_t (*SinkFn)(const unsigned char*, ssize_t, void*);
 
diff --git a/recovery/applypatch/bspatch.c b/recovery/applypatch/bspatch.c
index b34ec2a..b9fb174 100644
--- a/recovery/applypatch/bspatch.c
+++ b/recovery/applypatch/bspatch.c
@@ -28,6 +28,10 @@
 
 #include <bzlib.h>
 
+#ifdef __APPLE__
+#include <sys/types.h>
+#endif
+
 #include "mincrypt/sha.h"
 #include "applypatch.h"
 
@@ -63,7 +67,7 @@ void ShowBSDiffLicense() {
         );
 }

-static off_t offtin(u_char *buf)
+static off_t offtin(unsigned char *buf)
 {
     off_t y;

diff --git a/recovery/applypatch/freecache.c b/recovery/applypatch/freecache.c
index 9827fda..d308a57 100644
--- a/recovery/applypatch/freecache.c
+++ b/recovery/applypatch/freecache.c
@@ -4,7 +4,14 @@
 #include <stdlib.h>
 #include <string.h>
 #include <sys/stat.h>
+
+#ifdef __APPLE__
+#include <sys/param.h>
+#include <sys/mount.h>
+#else
 #include <sys/statfs.h>
+#endif
+
 #include <unistd.h>
 #include <dirent.h>
 #include <ctype.h>

diff --git a/recovery/applypatch/imgpatch.c b/recovery/applypatch/imgpatch.c
index 33c4487..38cbbd8 100644
--- a/recovery/applypatch/imgpatch.c
+++ b/recovery/applypatch/imgpatch.c
@@ -36,7 +36,7 @@
  * file, and update the SHA context with the output data as well.
  * Return 0 on success.
  */
-int ApplyImagePatch(const unsigned char* old_data, ssize_t old_size __unused,
+int ApplyImagePatch(const unsigned char* old_data, ssize_t old_size,
                     const Value* patch,
                     SinkFn sink, void* token, SHA_CTX* ctx,
                     const Value* bonus_data) {

diff --git a/recovery/minelf/Retouch.h b/recovery/minelf/Retouch.h
--- a/recovery/minelf/Retouch.h
+++ b/recovery/minelf/Retouch.h
@@ -19,6 +19,7 @@
 
 #include <stdbool.h>
 #include <sys/types.h>
+#include <stdint.h>
 
 typedef struct {
   char tag[8];        /* "RETOUCH ", not zero-terminated */